#version 430

layout (local_size_x = 1) in;

layout(std430, binding = 2) buffer vertTable
{
	int vertCountTable[];
};

layout(std430, binding = 3) buffer inBuffer
{
	int distances[]; // 65 * 65 * 65
};

layout(std430, binding = 4) buffer histoPyramid
{
	int verticesPerCell[];
};

void main()
{
	int xMax = 65;
	int yMax = 65;

	int pos = int(gl_GlobalInvocationID.x + (xMax * gl_GlobalInvocationID.y) + (xMax * yMax * gl_GlobalInvocationID.z));

	uint indices[8];
	indices[0] = 0 + pos;
	indices[1] = 1 + pos;
	indices[2] = 1 + pos + xMax * yMax;       
	indices[3] = 0 + pos + xMax * yMax;       
	indices[4] = 0 + pos + xMax;             
	indices[5] = 1 + pos + xMax;              
	indices[6] = 1 + pos + xMax + xMax * yMax;
	indices[7] = 0 + pos + xMax + xMax * yMax;

	int dist[8];
	dist[0] = (distances[indices[0] / 4] >> ((indices[0] % 4) * 8)) & 255;
	dist[1] = (distances[indices[1] / 4] >> ((indices[1] % 4) * 8)) & 255; 
	dist[2] = (distances[indices[2] / 4] >> ((indices[2] % 4) * 8)) & 255;
	dist[3] = (distances[indices[3] / 4] >> ((indices[3] % 4) * 8)) & 255;
	dist[4] = (distances[indices[4] / 4] >> ((indices[4] % 4) * 8)) & 255;
	dist[5] = (distances[indices[5] / 4] >> ((indices[5] % 4) * 8)) & 255;
	dist[6] = (distances[indices[6] / 4] >> ((indices[6] % 4) * 8)) & 255;
	dist[7] = (distances[indices[7] / 4] >> ((indices[7] % 4) * 8)) & 255;

	dist[0] = bitfieldExtract(dist[0], 0, 8);
	dist[1] = bitfieldExtract(dist[1], 0, 8);
	dist[2] = bitfieldExtract(dist[2], 0, 8);
	dist[3] = bitfieldExtract(dist[3], 0, 8);
	dist[4] = bitfieldExtract(dist[4], 0, 8);
	dist[5] = bitfieldExtract(dist[5], 0, 8);
	dist[6] = bitfieldExtract(dist[6], 0, 8);
	dist[7] = bitfieldExtract(dist[7], 0, 8);
	
	uint caseCode =
		int(dist[7] < 0) << 7 |
		int(dist[6] < 0) << 6 |
		int(dist[5] < 0) << 5 |
		int(dist[4] < 0) << 4 |
		int(dist[3] < 0) << 3 |
		int(dist[2] < 0) << 2 |
		int(dist[1] < 0) << 1 |
		int(dist[0] < 0) << 0;
		
	verticesPerCell[pos] = vertCountTable[caseCode];
}